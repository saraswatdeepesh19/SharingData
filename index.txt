import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import java.io.IOException;
import java.nio.file.*;

public class ImageWebSocketHandler extends TextWebSocketHandler {

    private static final String IMAGE_FOLDER = "/path/to/image/folder";
    
    @Override
    public void afterConnectionEstablished(WebSocketSession session) throws Exception {
        super.afterConnectionEstablished(session);
        watchFolder(session);
    }
    
    private void watchFolder(WebSocketSession session) {
        try {
            WatchService watchService = FileSystems.getDefault().newWatchService();
            Paths.get(IMAGE_FOLDER).register(watchService, StandardWatchEventKinds.ENTRY_CREATE);

            while (true) {
                WatchKey key = watchService.take();
                for (WatchEvent<?> event : key.pollEvents()) {
                    WatchEvent.Kind<?> kind = event.kind();

                    if (kind == StandardWatchEventKinds.ENTRY_CREATE) {
                        Path filePath = ((WatchEvent<Path>) event).context();
                        sendImage(session, filePath.toString());
                    }
                }
                key.reset();
            }
        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
        }
    }
    
    private void sendImage(WebSocketSession session, String fileName) {
        try {
            String imagePath = IMAGE_FOLDER + "/" + fileName;
            byte[] imageBytes = Files.readAllBytes(Paths.get(imagePath));
            String base64Image = Base64.getEncoder().encodeToString(imageBytes);
            session.sendMessage(new TextMessage(base64Image));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
